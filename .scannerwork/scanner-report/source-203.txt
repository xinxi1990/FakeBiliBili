// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.bilibili.di.component;

import com.bilibili.di.module.FragmentModule;
import com.bilibili.di.module.PageModule;
import com.bilibili.di.module.PageModule_ProvideBangumiFragmentFactory;
import com.bilibili.di.module.PageModule_ProvideLiveFragmentFactory;
import com.bilibili.di.module.PageModule_ProvideRecommendFragmentFactory;
import com.bilibili.model.api.ApiLiveApis;
import com.bilibili.model.api.BangumiApis;
import com.bilibili.model.api.LiveApis;
import com.bilibili.model.api.RecommendApis;
import com.bilibili.model.api.RegionApis;
import com.bilibili.model.api.WeChatApis;
import com.bilibili.ui.bangumi.BangumiFragment;
import com.bilibili.ui.bangumi.BangumiFragment_MembersInjector;
import com.bilibili.ui.bangumi.BangumiPresenter;
import com.bilibili.ui.bangumi.BangumiPresenter_Factory;
import com.bilibili.ui.live.LiveFragment;
import com.bilibili.ui.live.LiveFragment_MembersInjector;
import com.bilibili.ui.live.LivePresenter;
import com.bilibili.ui.live.LivePresenter_Factory;
import com.bilibili.ui.live.LivePresenter_MembersInjector;
import com.bilibili.ui.main.MainFragment;
import com.bilibili.ui.main.MainFragment_MembersInjector;
import com.bilibili.ui.recommed.RecommendFragment;
import com.bilibili.ui.recommed.RecommendFragment_MembersInjector;
import com.bilibili.ui.recommed.RecommendPresenter;
import com.bilibili.ui.recommed.RecommendPresenter_Factory;
import com.bilibili.ui.region.RegionFragment;
import com.bilibili.ui.region.RegionFragment_MembersInjector;
import com.bilibili.ui.region.RegionPresenter;
import com.bilibili.ui.region.RegionPresenter_Factory;
import com.bilibili.ui.test.fragment.NewsFragment;
import com.bilibili.ui.test.fragment.NewsPageFragment;
import com.bilibili.ui.test.fragment.NewsPageFragment2;
import com.bilibili.ui.test.fragment.NewsPageFragment2_MembersInjector;
import com.bilibili.ui.test.fragment.NewsPageFragment_MembersInjector;
import com.bilibili.ui.test.mvp.presenter.NewsPresenter;
import com.bilibili.ui.test.mvp.presenter.NewsPresenter_Factory;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import dagger.internal.MembersInjectors;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DaggerFragmentComponent implements FragmentComponent {
  private Provider<WeChatApis> weChatApisProvider;

  private Provider<NewsPresenter> newsPresenterProvider;

  private MembersInjector<NewsPageFragment> newsPageFragmentMembersInjector;

  private MembersInjector<NewsPageFragment2> newsPageFragment2MembersInjector;

  private Provider<LiveFragment> provideLiveFragmentProvider;

  private Provider<RecommendFragment> provideRecommendFragmentProvider;

  private Provider<BangumiFragment> provideBangumiFragmentProvider;

  private MembersInjector<MainFragment> mainFragmentMembersInjector;

  private Provider<LiveApis> liveApisProvider;

  private Provider<ApiLiveApis> apiLiveApisProvider;

  private MembersInjector<LivePresenter> livePresenterMembersInjector;

  private Provider<LivePresenter> livePresenterProvider;

  private MembersInjector<LiveFragment> liveFragmentMembersInjector;

  private Provider<BangumiApis> biliBiliApisProvider;

  private Provider<BangumiPresenter> bangumiPresenterProvider;

  private MembersInjector<BangumiFragment> bangumiFragmentMembersInjector;

  private Provider<RecommendApis> recommendApisProvider;

  private Provider<RecommendPresenter> recommendPresenterProvider;

  private MembersInjector<RecommendFragment> recommendFragmentMembersInjector;

  private Provider<RegionApis> regionApisProvider;

  private Provider<RegionPresenter> regionPresenterProvider;

  private MembersInjector<RegionFragment> regionFragmentMembersInjector;

  private DaggerFragmentComponent(Builder builder) {
    assert builder != null;
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {

    this.weChatApisProvider =
        new com_bilibili_di_component_ApiComponent_weChatApis(builder.apiComponent);

    this.newsPresenterProvider =
        NewsPresenter_Factory.create(MembersInjectors.<NewsPresenter>noOp(), weChatApisProvider);

    this.newsPageFragmentMembersInjector =
        NewsPageFragment_MembersInjector.create(newsPresenterProvider);

    this.newsPageFragment2MembersInjector =
        NewsPageFragment2_MembersInjector.create(newsPresenterProvider);

    this.provideLiveFragmentProvider =
        DoubleCheck.provider(PageModule_ProvideLiveFragmentFactory.create(builder.pageModule));

    this.provideRecommendFragmentProvider =
        DoubleCheck.provider(PageModule_ProvideRecommendFragmentFactory.create(builder.pageModule));

    this.provideBangumiFragmentProvider =
        DoubleCheck.provider(PageModule_ProvideBangumiFragmentFactory.create(builder.pageModule));

    this.mainFragmentMembersInjector =
        MainFragment_MembersInjector.create(
            provideLiveFragmentProvider,
            provideRecommendFragmentProvider,
            provideBangumiFragmentProvider);

    this.liveApisProvider =
        new com_bilibili_di_component_ApiComponent_liveApis(builder.apiComponent);

    this.apiLiveApisProvider =
        new com_bilibili_di_component_ApiComponent_apiLiveApis(builder.apiComponent);

    this.livePresenterMembersInjector =
        LivePresenter_MembersInjector.create(liveApisProvider, apiLiveApisProvider);

    this.livePresenterProvider = LivePresenter_Factory.create(livePresenterMembersInjector);

    this.liveFragmentMembersInjector = LiveFragment_MembersInjector.create(livePresenterProvider);

    this.biliBiliApisProvider =
        new com_bilibili_di_component_ApiComponent_biliBiliApis(builder.apiComponent);

    this.bangumiPresenterProvider =
        BangumiPresenter_Factory.create(
            MembersInjectors.<BangumiPresenter>noOp(), biliBiliApisProvider);

    this.bangumiFragmentMembersInjector =
        BangumiFragment_MembersInjector.create(bangumiPresenterProvider);

    this.recommendApisProvider =
        new com_bilibili_di_component_ApiComponent_recommendApis(builder.apiComponent);

    this.recommendPresenterProvider =
        RecommendPresenter_Factory.create(
            MembersInjectors.<RecommendPresenter>noOp(), recommendApisProvider);

    this.recommendFragmentMembersInjector =
        RecommendFragment_MembersInjector.create(recommendPresenterProvider);

    this.regionApisProvider =
        new com_bilibili_di_component_ApiComponent_regionApis(builder.apiComponent);

    this.regionPresenterProvider =
        RegionPresenter_Factory.create(
            MembersInjectors.<RegionPresenter>noOp(), regionApisProvider);

    this.regionFragmentMembersInjector =
        RegionFragment_MembersInjector.create(regionPresenterProvider);
  }

  @Override
  public void inject(NewsFragment newsFragment) {
    MembersInjectors.<NewsFragment>noOp().injectMembers(newsFragment);
  }

  @Override
  public void inject(NewsPageFragment newsPageFragment) {
    newsPageFragmentMembersInjector.injectMembers(newsPageFragment);
  }

  @Override
  public void inject(NewsPageFragment2 newsPageFragment2) {
    newsPageFragment2MembersInjector.injectMembers(newsPageFragment2);
  }

  @Override
  public void inject(MainFragment mainFragment) {
    mainFragmentMembersInjector.injectMembers(mainFragment);
  }

  @Override
  public void inject(LiveFragment liveFragment) {
    liveFragmentMembersInjector.injectMembers(liveFragment);
  }

  @Override
  public void inject(BangumiFragment bangumiFragment) {
    bangumiFragmentMembersInjector.injectMembers(bangumiFragment);
  }

  @Override
  public void inject(RecommendFragment recommendFragment) {
    recommendFragmentMembersInjector.injectMembers(recommendFragment);
  }

  @Override
  public void inject(RegionFragment regionFragment) {
    regionFragmentMembersInjector.injectMembers(regionFragment);
  }

  public static final class Builder {
    private PageModule pageModule;

    private ApiComponent apiComponent;

    private Builder() {}

    public FragmentComponent build() {
      if (pageModule == null) {
        this.pageModule = new PageModule();
      }
      if (apiComponent == null) {
        throw new IllegalStateException(ApiComponent.class.getCanonicalName() + " must be set");
      }
      return new DaggerFragmentComponent(this);
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This
     *     method is a no-op. For more, see https://google.github.io/dagger/unused-modules.
     */
    @Deprecated
    public Builder fragmentModule(FragmentModule fragmentModule) {
      Preconditions.checkNotNull(fragmentModule);
      return this;
    }

    public Builder pageModule(PageModule pageModule) {
      this.pageModule = Preconditions.checkNotNull(pageModule);
      return this;
    }

    public Builder apiComponent(ApiComponent apiComponent) {
      this.apiComponent = Preconditions.checkNotNull(apiComponent);
      return this;
    }
  }

  private static class com_bilibili_di_component_ApiComponent_weChatApis
      implements Provider<WeChatApis> {
    private final ApiComponent apiComponent;

    com_bilibili_di_component_ApiComponent_weChatApis(ApiComponent apiComponent) {
      this.apiComponent = apiComponent;
    }

    @Override
    public WeChatApis get() {
      return Preconditions.checkNotNull(
          apiComponent.weChatApis(), "Cannot return null from a non-@Nullable component method");
    }
  }

  private static class com_bilibili_di_component_ApiComponent_liveApis
      implements Provider<LiveApis> {
    private final ApiComponent apiComponent;

    com_bilibili_di_component_ApiComponent_liveApis(ApiComponent apiComponent) {
      this.apiComponent = apiComponent;
    }

    @Override
    public LiveApis get() {
      return Preconditions.checkNotNull(
          apiComponent.liveApis(), "Cannot return null from a non-@Nullable component method");
    }
  }

  private static class com_bilibili_di_component_ApiComponent_apiLiveApis
      implements Provider<ApiLiveApis> {
    private final ApiComponent apiComponent;

    com_bilibili_di_component_ApiComponent_apiLiveApis(ApiComponent apiComponent) {
      this.apiComponent = apiComponent;
    }

    @Override
    public ApiLiveApis get() {
      return Preconditions.checkNotNull(
          apiComponent.apiLiveApis(), "Cannot return null from a non-@Nullable component method");
    }
  }

  private static class com_bilibili_di_component_ApiComponent_biliBiliApis
      implements Provider<BangumiApis> {
    private final ApiComponent apiComponent;

    com_bilibili_di_component_ApiComponent_biliBiliApis(ApiComponent apiComponent) {
      this.apiComponent = apiComponent;
    }

    @Override
    public BangumiApis get() {
      return Preconditions.checkNotNull(
          apiComponent.biliBiliApis(), "Cannot return null from a non-@Nullable component method");
    }
  }

  private static class com_bilibili_di_component_ApiComponent_recommendApis
      implements Provider<RecommendApis> {
    private final ApiComponent apiComponent;

    com_bilibili_di_component_ApiComponent_recommendApis(ApiComponent apiComponent) {
      this.apiComponent = apiComponent;
    }

    @Override
    public RecommendApis get() {
      return Preconditions.checkNotNull(
          apiComponent.recommendApis(), "Cannot return null from a non-@Nullable component method");
    }
  }

  private static class com_bilibili_di_component_ApiComponent_regionApis
      implements Provider<RegionApis> {
    private final ApiComponent apiComponent;

    com_bilibili_di_component_ApiComponent_regionApis(ApiComponent apiComponent) {
      this.apiComponent = apiComponent;
    }

    @Override
    public RegionApis get() {
      return Preconditions.checkNotNull(
          apiComponent.regionApis(), "Cannot return null from a non-@Nullable component method");
    }
  }
}
