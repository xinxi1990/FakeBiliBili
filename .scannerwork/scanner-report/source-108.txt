// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.bilibili.ui.test.activity;

import com.bilibili.model.api.ApiLiveApis;
import com.bilibili.model.api.AppApis;
import com.bilibili.model.api.BangumiApis;
import com.bilibili.model.api.LiveApis;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class TestApiActivity_MembersInjector implements MembersInjector<TestApiActivity> {
  private final Provider<AppApis> appApisProvider;

  private final Provider<BangumiApis> bangumiApisProvider;

  private final Provider<LiveApis> liveApisProvider;

  private final Provider<ApiLiveApis> apiLiveApisProvider;

  public TestApiActivity_MembersInjector(
      Provider<AppApis> appApisProvider,
      Provider<BangumiApis> bangumiApisProvider,
      Provider<LiveApis> liveApisProvider,
      Provider<ApiLiveApis> apiLiveApisProvider) {
    assert appApisProvider != null;
    this.appApisProvider = appApisProvider;
    assert bangumiApisProvider != null;
    this.bangumiApisProvider = bangumiApisProvider;
    assert liveApisProvider != null;
    this.liveApisProvider = liveApisProvider;
    assert apiLiveApisProvider != null;
    this.apiLiveApisProvider = apiLiveApisProvider;
  }

  public static MembersInjector<TestApiActivity> create(
      Provider<AppApis> appApisProvider,
      Provider<BangumiApis> bangumiApisProvider,
      Provider<LiveApis> liveApisProvider,
      Provider<ApiLiveApis> apiLiveApisProvider) {
    return new TestApiActivity_MembersInjector(
        appApisProvider, bangumiApisProvider, liveApisProvider, apiLiveApisProvider);
  }

  @Override
  public void injectMembers(TestApiActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.appApis = appApisProvider.get();
    instance.bangumiApis = bangumiApisProvider.get();
    instance.liveApis = liveApisProvider.get();
    instance.apiLiveApis = apiLiveApisProvider.get();
  }

  public static void injectAppApis(TestApiActivity instance, Provider<AppApis> appApisProvider) {
    instance.appApis = appApisProvider.get();
  }

  public static void injectBangumiApis(
      TestApiActivity instance, Provider<BangumiApis> bangumiApisProvider) {
    instance.bangumiApis = bangumiApisProvider.get();
  }

  public static void injectLiveApis(TestApiActivity instance, Provider<LiveApis> liveApisProvider) {
    instance.liveApis = liveApisProvider.get();
  }

  public static void injectApiLiveApis(
      TestApiActivity instance, Provider<ApiLiveApis> apiLiveApisProvider) {
    instance.apiLiveApis = apiLiveApisProvider.get();
  }
}
