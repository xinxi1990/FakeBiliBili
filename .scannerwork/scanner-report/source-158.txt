// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.bilibili.ui.live.liveplay;

import com.bilibili.model.api.ApiLiveApis;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class LivePlayPresenter_Factory implements Factory<LivePlayPresenter> {
  private final MembersInjector<LivePlayPresenter> livePlayPresenterMembersInjector;

  private final Provider<ApiLiveApis> apiLiveApisProvider;

  public LivePlayPresenter_Factory(
      MembersInjector<LivePlayPresenter> livePlayPresenterMembersInjector,
      Provider<ApiLiveApis> apiLiveApisProvider) {
    assert livePlayPresenterMembersInjector != null;
    this.livePlayPresenterMembersInjector = livePlayPresenterMembersInjector;
    assert apiLiveApisProvider != null;
    this.apiLiveApisProvider = apiLiveApisProvider;
  }

  @Override
  public LivePlayPresenter get() {
    return MembersInjectors.injectMembers(
        livePlayPresenterMembersInjector, new LivePlayPresenter(apiLiveApisProvider.get()));
  }

  public static Factory<LivePlayPresenter> create(
      MembersInjector<LivePlayPresenter> livePlayPresenterMembersInjector,
      Provider<ApiLiveApis> apiLiveApisProvider) {
    return new LivePlayPresenter_Factory(livePlayPresenterMembersInjector, apiLiveApisProvider);
  }
}
