// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.bilibili.di.module;

import com.bilibili.model.api.LiveApis;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class ApiModule_ProvideLiveServiceFactory implements Factory<LiveApis> {
  private final ApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public ApiModule_ProvideLiveServiceFactory(
      ApiModule module, Provider<Retrofit> retrofitProvider) {
    assert module != null;
    this.module = module;
    assert retrofitProvider != null;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public LiveApis get() {
    return Preconditions.checkNotNull(
        module.provideLiveService(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<LiveApis> create(ApiModule module, Provider<Retrofit> retrofitProvider) {
    return new ApiModule_ProvideLiveServiceFactory(module, retrofitProvider);
  }

  /** Proxies {@link ApiModule#provideLiveService(Retrofit)}. */
  public static LiveApis proxyProvideLiveService(ApiModule instance, Retrofit retrofit) {
    return instance.provideLiveService(retrofit);
  }
}
