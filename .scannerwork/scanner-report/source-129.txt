// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.bilibili.ui.bangumi;

import com.bilibili.model.api.BangumiApis;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class BangumiPresenter_Factory implements Factory<BangumiPresenter> {
  private final MembersInjector<BangumiPresenter> bangumiPresenterMembersInjector;

  private final Provider<BangumiApis> bangumiApisProvider;

  public BangumiPresenter_Factory(
      MembersInjector<BangumiPresenter> bangumiPresenterMembersInjector,
      Provider<BangumiApis> bangumiApisProvider) {
    assert bangumiPresenterMembersInjector != null;
    this.bangumiPresenterMembersInjector = bangumiPresenterMembersInjector;
    assert bangumiApisProvider != null;
    this.bangumiApisProvider = bangumiApisProvider;
  }

  @Override
  public BangumiPresenter get() {
    return MembersInjectors.injectMembers(
        bangumiPresenterMembersInjector, new BangumiPresenter(bangumiApisProvider.get()));
  }

  public static Factory<BangumiPresenter> create(
      MembersInjector<BangumiPresenter> bangumiPresenterMembersInjector,
      Provider<BangumiApis> bangumiApisProvider) {
    return new BangumiPresenter_Factory(bangumiPresenterMembersInjector, bangumiApisProvider);
  }
}
