// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.bilibili.ui.live;

import com.bilibili.model.api.ApiLiveApis;
import com.bilibili.model.api.LiveApis;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class LivePresenter_MembersInjector implements MembersInjector<LivePresenter> {
  private final Provider<LiveApis> liveApisProvider;

  private final Provider<ApiLiveApis> apiLiveApisProvider;

  public LivePresenter_MembersInjector(
      Provider<LiveApis> liveApisProvider, Provider<ApiLiveApis> apiLiveApisProvider) {
    assert liveApisProvider != null;
    this.liveApisProvider = liveApisProvider;
    assert apiLiveApisProvider != null;
    this.apiLiveApisProvider = apiLiveApisProvider;
  }

  public static MembersInjector<LivePresenter> create(
      Provider<LiveApis> liveApisProvider, Provider<ApiLiveApis> apiLiveApisProvider) {
    return new LivePresenter_MembersInjector(liveApisProvider, apiLiveApisProvider);
  }

  @Override
  public void injectMembers(LivePresenter instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.liveApis = liveApisProvider.get();
    instance.apiLiveApis = apiLiveApisProvider.get();
  }

  public static void injectLiveApis(LivePresenter instance, Provider<LiveApis> liveApisProvider) {
    instance.liveApis = liveApisProvider.get();
  }

  public static void injectApiLiveApis(
      LivePresenter instance, Provider<ApiLiveApis> apiLiveApisProvider) {
    instance.apiLiveApis = apiLiveApisProvider.get();
  }
}
