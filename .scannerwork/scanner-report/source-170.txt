// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.bilibili.ui.main;

import com.bilibili.ui.bangumi.BangumiFragment;
import com.bilibili.ui.live.LiveFragment;
import com.bilibili.ui.recommed.RecommendFragment;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class MainFragment_MembersInjector implements MembersInjector<MainFragment> {
  private final Provider<LiveFragment> mLiveFragmetProvider;

  private final Provider<RecommendFragment> mRecommendFragmentProvider;

  private final Provider<BangumiFragment> mBangumiFragmentProvider;

  public MainFragment_MembersInjector(
      Provider<LiveFragment> mLiveFragmetProvider,
      Provider<RecommendFragment> mRecommendFragmentProvider,
      Provider<BangumiFragment> mBangumiFragmentProvider) {
    assert mLiveFragmetProvider != null;
    this.mLiveFragmetProvider = mLiveFragmetProvider;
    assert mRecommendFragmentProvider != null;
    this.mRecommendFragmentProvider = mRecommendFragmentProvider;
    assert mBangumiFragmentProvider != null;
    this.mBangumiFragmentProvider = mBangumiFragmentProvider;
  }

  public static MembersInjector<MainFragment> create(
      Provider<LiveFragment> mLiveFragmetProvider,
      Provider<RecommendFragment> mRecommendFragmentProvider,
      Provider<BangumiFragment> mBangumiFragmentProvider) {
    return new MainFragment_MembersInjector(
        mLiveFragmetProvider, mRecommendFragmentProvider, mBangumiFragmentProvider);
  }

  @Override
  public void injectMembers(MainFragment instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.mLiveFragmet = mLiveFragmetProvider.get();
    instance.mRecommendFragment = mRecommendFragmentProvider.get();
    instance.mBangumiFragment = mBangumiFragmentProvider.get();
  }

  public static void injectMLiveFragmet(
      MainFragment instance, Provider<LiveFragment> mLiveFragmetProvider) {
    instance.mLiveFragmet = mLiveFragmetProvider.get();
  }

  public static void injectMRecommendFragment(
      MainFragment instance, Provider<RecommendFragment> mRecommendFragmentProvider) {
    instance.mRecommendFragment = mRecommendFragmentProvider.get();
  }

  public static void injectMBangumiFragment(
      MainFragment instance, Provider<BangumiFragment> mBangumiFragmentProvider) {
    instance.mBangumiFragment = mBangumiFragmentProvider.get();
  }
}
