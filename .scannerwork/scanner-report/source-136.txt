// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.bilibili.ui.recommed;

import com.bilibili.model.api.RecommendApis;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class RecommendPresenter_Factory implements Factory<RecommendPresenter> {
  private final MembersInjector<RecommendPresenter> recommendPresenterMembersInjector;

  private final Provider<RecommendApis> recommendApisProvider;

  public RecommendPresenter_Factory(
      MembersInjector<RecommendPresenter> recommendPresenterMembersInjector,
      Provider<RecommendApis> recommendApisProvider) {
    assert recommendPresenterMembersInjector != null;
    this.recommendPresenterMembersInjector = recommendPresenterMembersInjector;
    assert recommendApisProvider != null;
    this.recommendApisProvider = recommendApisProvider;
  }

  @Override
  public RecommendPresenter get() {
    return MembersInjectors.injectMembers(
        recommendPresenterMembersInjector, new RecommendPresenter(recommendApisProvider.get()));
  }

  public static Factory<RecommendPresenter> create(
      MembersInjector<RecommendPresenter> recommendPresenterMembersInjector,
      Provider<RecommendApis> recommendApisProvider) {
    return new RecommendPresenter_Factory(recommendPresenterMembersInjector, recommendApisProvider);
  }
}
